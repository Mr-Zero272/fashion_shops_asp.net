@model FashionShops.Areas.Admin.Models.AddProduct
@{
    ViewBag.Title = "EditProduct";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid" style="margin-bottom: 50px;">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">Add Product</h1>
        </div>
        <!-- /.col-lg-12 -->
    </div>
    <form id="form-add-product">
        <div class="row">
            <div class="form-group col-md-12" hidden>
                <label for="product_id">Product ID:</label>
                <input type="text" class="form-control" name="product_id" id="product_id" value="@Model.product.product_id"
                       placeholder="Product id">
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                <label for="product_name">Product name:</label>
                <input type="text" class="form-control" name="product_name" id="product_name" value="@Model.product.name"
                       placeholder="Product name">
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                <label for="product_describe">Product describe:</label>
                <textarea class="form-control" id="product_describe" name="product_describe" rows="3"
                          placeholder="Product describe">@Model.product.describe</textarea>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                <label class="" for="product_price">Product price</label>
                <input type="number" class="form-control" id="product_price" name="product_price" value="@Model.product.price" placeholder="Product price" min="1">
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <label for="product_brand">Product brand</label>
                <input type="text" class="form-control" name="product_brand" id="product_brand" value="@Model.product.brand" placeholder="Product brand">
            </div>
            <div class="form-group col-md-6">
                <label for="product_available">Preference</label>
                <select class="form-control mr-sm-2" id="product_available" name="product_available">
                    <option selected>@Model.product.product_availability</option>
                    <option value="available">Available</option>
                    <option value="outofstock">Out of stock</option>
                    <option value="reserve">Reserve</option>
                </select>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <label for="">Size: </label>
                @{
                    var sizes = Model.product.Product_Quantity.Where(x => x.product_id == Model.product.product_id).Select(x => x.size_id).Distinct().ToList();
                    var colors = Model.product.Product_Quantity.Where(x => x.product_id == Model.product.product_id).Select(x => x.color_id).Distinct().ToList();
                    var categories = Model.product.Product_Category.Where(x => x.product_id == Model.product.product_id).Distinct().ToList();
                    var tags = Model.product.Product_Tag.Where(x => x.product_id == Model.product.product_id).Distinct().ToList();
                }
                @for (int i = 0; i < Model.size.Count(); i++)
                {
                    bool exists = false;
                    for (int j = 0; j < sizes.Count(); j++)
                    {
                        if (sizes[j].Value == Model.size[i].size_id)
                        {
                            <a href="javascript:void(0)" class="btn btn-outline-dark size-checkbox active-custom">@Model.size[i].size1</a>
                            <input type="checkbox" name="proSize" id="" class="size-checkbox-value" value="@Model.size[i].size_id" data-namesize="@Model.size[i].size1" checked hidden>
                            exists = true;
                        }
                    }
                    if (!exists)
                    {
                        <a href="javascript:void(0)" class="btn btn-outline-dark size-checkbox">@Model.size[i].size1</a>
                        <input type="checkbox" name="proSize" id="" class="size-checkbox-value" value="@Model.size[i].size_id" data-namesize="@Model.size[i].size1" hidden>
                    }
                }

            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <label for="">Color: </label>
                @for (int i = 0; i < Model.color.Count(); i++)
                {
                    bool exists = false;
                    for (int j = 0; j < colors.Count(); j++)
                    {
                        if (colors[j].Value == Model.color[i].color_id)
                        {
                            exists = true;
                            <a href="javascript:void(0)" class="btn btn-outline-dark color-checkbox active-custom">@Model.color[i].color1</a>
                            <input type="checkbox" name="proColor" id="" class="color-checkbox-value" value="@Model.color[i].color_id" data-namecolor="@Model.color[i].color1" checked hidden>
                        }
                    }
                    if (!exists)
                    {
                        <a href="javascript:void(0)" class="btn btn-outline-dark color-checkbox">@Model.color[i].color1</a>
                        <input type="checkbox" name="proColor" id="" class="color-checkbox-value" value="@Model.color[i].color_id" data-namecolor="@Model.color[i].color1" hidden>
                    }
                }
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <a href="javascript:void(0)" id="quantityInput" class="btn btn-warning" style="color: white">Enter quantity</a>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Size</th>
                            <th scope="col">Color</th>
                            <th scope="col">Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="tableBody">
                        @{ var quantities = Model.product.Product_Quantity.ToList();
                            int totalQ = quantities.Count;
                            int q = 1;}
                        @for (int z = 0; z < totalQ; z++)
                        {
                            <tr>
                                <th scope="row">@q</th>
                                <td>@quantities[z].Size.size1</td>
                                <td>@quantities[z].Color.color1</td>
                                <td><input type="number" min="1" max="999" value="@quantities[z].quantity" class="form-control" data-sizeid="@quantities[z].size_id" data-colorid="@quantities[z].color_id" name="quantity"></td>
                            </tr>
                            q++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row mt-2">
            <div class="form-group">
                <label for="">Category: </label>
                @for (int i = 0; i < Model.category.Count(); i++)
                {
                    bool exists = false;
                    for (int j = 0; j < categories.Count(); j++)
                    {
                        if (categories[j].category_id == Model.category[i].category_id)
                        {
                            exists = true;
                            <a href="javascript:void(0)" class="btn btn-outline-dark category-checkbox active-custom">@Model.category[i].name</a>
                            <input type="checkbox" name="proCategory" id="" class="category-checkbox-value" value="@Model.category[i].category_id" data-namecategory="@Model.category[i].name" checked hidden>
                        }
                    }
                    if (!exists)
                    {
                        <a href="javascript:void(0)" class="btn btn-outline-dark category-checkbox">@Model.category[i].name</a>
                        <input type="checkbox" name="proCategory" id="" class="category-checkbox-value" value="@Model.category[i].category_id" data-namecategory="@Model.category[i].name" hidden>
                    }
                }
            </div>
        </div>

        <div class="row mt-2">
            <div class="form-group">
                <label for="">Tag: </label>
                @for (int i = 0; i < Model.tag.Count(); i++)
                {
                    bool exists = false;
                    for (int j = 0; j < tags.Count(); j++)
                    {
                        if (tags[j].tag_id == Model.tag[i].tag_id)
                        {
                            exists = true;
                            <a href="javascript:void(0)" class="btn btn-outline-dark tag-checkbox active-custom">@Model.tag[i].tag_name</a>
                            <input type="checkbox" name="proTag" id="" class="tag-checkbox-value" value="@Model.tag[i].tag_id" data-namecategory="@Model.tag[i].tag_name" checked hidden>
                        }
                    }
                    if (!exists)
                    {
                        <a href="javascript:void(0)" class="btn btn-outline-dark tag-checkbox">@Model.tag[i].tag_name</a>
                        <input type="checkbox" name="proTag" id="" class="tag-checkbox-value" value="@Model.tag[i].tag_id" data-namecategory="@Model.tag[i].tag_name" hidden>
                    }
                }
            </div>
        </div>
        <div class="btn btn-warning" id="edit-pro-image">Edit Image</div>
        <div class="row mt-2 pro_image" hidden>
            <div class="form-group">
                <label for="image1">Image for product 1: </label>
                <input type="file" class="form-control-file image_file" name="image1" id="image1" enctype="multipart/form-data">
            </div>
        </div>
        <div class="row mt-2 pro_image" hidden>
            <div class="form-group">
                <label for="image2">Image for product 2: </label>
                <input type="file" class="form-control-file image_file" name="image2" id="image2" formenctype="multipart/form-data">
            </div>
        </div>
        <div class="row mt-2 pro_image" hidden>
            <div class="form-group">
                <label for="image3">Image for product 3: </label>
                <input type="file" class="form-control-file image_file" name="image3" id="image3" formenctype="multipart/form-data">
            </div>
        </div>
        <div class="row mt-2 pro_image" hidden>
            <div class="form-group">
                <label for="image4">Image for product 4: </label>
                <input type="file" class="form-control-file image_file" name="image4" id="image4" formenctype="multipart/form-data">
            </div>
        </div>
        <button type="submit" id="submit-add-pro-form" class="btn btn-success">Save</button>
    </form>
</div>

@section AddProduct{

    <script src="~/Content/plugins/toastr/toastr.min.js"></script>
    <style>
        .btn-outline-dark {
            color: #212529;
            border-color: #212529;
        }

            .btn-outline-dark:hover {
                color: #fff;
                background-color: #212529;
                border-color: #212529;
            }

        .active-custom {
            color: #fff !important;
            background-color: #343a40;
            border-color: #343a40;
        }
    </style>
    <script>
        let color_checkbox = $('.size-checkbox');
        let color_checkbox_value = $('.size-checkbox-value');
        $(document).ready(function () {
            function checkAtLeastOne(check, checkValue) {
                let boolChecked = false;
                $(check).each(function () {
                    if ($(this).hasClass('active-custom')) {
                        boolChecked = true;
                    }
                })
                if (!boolChecked) {
                    $(check + ':eq(0)').addClass('active-custom');
                    $(checkValue + ':eq(0)').prop('checked', true);
                }
            }

            $('.size-checkbox').click(function () {
                let index = $('.size-checkbox').index(this);
                console.log(index);
                $(this).toggleClass('active-custom');
                checkAtLeastOne('.size-checkbox', '.size-checkbox-value');
                if ($(this).hasClass('active-custom'))
                    $('.size-checkbox-value:eq(' + (index) + ')').prop('checked', true);
                else
                    $('.size-checkbox-value:eq(' + (index) + ')').prop('checked', false);

            });

            $('.color-checkbox').click(function () {
                let index = $('.color-checkbox').index(this);
                $(this).toggleClass('active-custom');
                checkAtLeastOne('.color-checkbox', '.color-checkbox-value');
                if ($(this).hasClass('active-custom'))
                    $('.color-checkbox-value:eq(' + (index) + ')').prop('checked', true);
                else
                    $('.color-checkbox-value:eq(' + (index) + ')').prop('checked', false);

            });

            $(document).on('click', '#quantityInput', function () {
                let arrColor = [];
                let arrSize = [];
                $('.color-checkbox-value:checked').each(function () {
                    //console.log($(this).data('namesize'));
                    arrColor.push($(this).data('namecolor'));
                    arrColor.push($(this).val());
                })
                $('.size-checkbox-value:checked').each(function () {
                    arrSize.push($(this).data('namesize'));
                    arrSize.push($(this).val());
                })
                console.log(arrColor);
                console.log(arrSize);
                let strTable = ``;
                let no = 1;
                for (let i = 0; i < arrColor.length; i += 2) {
                    for (let j = 0; j < arrSize.length; j += 2) {
                        strTable += `<tr>
                                            <th scope="row">` + no++ + `</th>
                                            <td>` + arrSize[j] + `</td>
                                            <td>` + arrColor[i] + `</td>
                                            <td><input type="number" min="1" max="999" value="1" class="form-control" data-sizeid=` + arrSize[j + 1] + ` data-colorid=` + arrColor[i + 1] + ` name="quantity"></td>
                                        </tr>`;

                    }
                }
                $('#tableBody').html(strTable);
            });

            $('.category-checkbox').click(function () {
                let index = $('.category-checkbox').index(this);
                $(this).toggleClass('active-custom');
                checkAtLeastOne('.category-checkbox', '.category-checkbox-value');
                if ($(this).hasClass('active-custom'))
                    $('.category-checkbox-value:eq(' + (index) + ')').prop('checked', true);
                else
                    $('.category-checkbox-value:eq(' + (index) + ')').prop('checked', false);

            });

            $('.tag-checkbox').click(function () {
                let index = $('.tag-checkbox').index(this);
                $(this).toggleClass('active-custom');
                checkAtLeastOne('.tag-checkbox', '.tag-checkbox-value');
                if ($(this).hasClass('active-custom'))
                    $('.tag-checkbox-value:eq(' + (index) + ')').prop('checked', true);
                else
                    $('.tag-checkbox-value:eq(' + (index) + ')').prop('checked', false);

            });

            var isClickEditImage = false;
            $(document).on('click', '#edit-pro-image', function () {
                $('.pro_image').each(function () {
                    $(this).attr('hidden', false);
                });
                $('.image_file').each(function () {
                    $(this).attr('required', true);
                });
                isClickEditImage = true;
            });

            $(document).on('submit', '#form-add-product', function (item) {
                item.preventDefault();
                let arrQuantity = [];
                let arrTag = [];
                let arrCategory = [];
                $('input[name=quantity]').each(function () {
                    arrQuantity.push($(this).data('sizeid'));
                    arrQuantity.push($(this).data('colorid'));
                    arrQuantity.push(Number($(this).val()));
                })

                $('.category-checkbox-value:checked').each(function () {
                    arrCategory.push($(this).val());
                })

                $('.tag-checkbox-value:checked').each(function () {
                    arrTag.push($(this).val());
                })
                //console.log(arrCategory);
                //console.log(arrTag);
                //console.log(arrQuantity);
                var formData = new FormData(this);
                formData.append('arrCategory', JSON.stringify(arrCategory));
                formData.append('arrTag', JSON.stringify(arrTag));
                formData.append('arrQuantity', JSON.stringify(arrQuantity));
                formData.append('isClickEditImage', isClickEditImage);
                $.ajax({
                    url: '/Admin/Table/EditProduct',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        let r = confirm(response);
                        if (r) {
                            window.location.href = "/Admin/Table/ProductTable";
                        } else {
                            window.location.href = "/Admin/Table/ProductTable";
                        }
                        // :))
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    }
                });
            });

        });
    </script>
}

